{"version":3,"sources":["../index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../AsyncStorage.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/deep-assign/index.js","../node_modules/is-obj/index.js","../hooks.js"],"names":["AsyncStorage","module","exports","obj","__esModule","createPromise","Promise","value","getValue","callback","resolve","err","reject","createPromiseAll","result","processResult","errors","key","window","mergeLocalStorageItem","oldValue","oldObject","JSON","newObject","nextValue","numberOfKeys","keys","i","promises","keyValuePairs","item","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","isObj","require","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","assignKey","to","from","call","assign","getOwnPropertySymbols","symbols","s","arguments","x","type","getItem","args","setItem","mergeItem","removeItem"],"mappings":"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","file":"static/js/3.6a631201.chunk.js","sourcesContent":["/**\n * @format\n * @flow\n */\n\nimport AsyncStorage from './AsyncStorage';\n\nexport default AsyncStorage;\nexport {useAsyncStorage} from './hooks';\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport merge from 'deep-assign';\n\nconst mergeLocalStorageItem = (key, value) => {\n  const oldValue = window.localStorage.getItem(key);\n  const oldObject = JSON.parse(oldValue);\n  const newObject = JSON.parse(value);\n  const nextValue = JSON.stringify(merge({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\n\nconst createPromise = (getValue, callback): Promise<*> => {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = getValue();\n      if (callback) {\n        callback(null, value);\n      }\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n      reject(err);\n    }\n  });\n};\n\nconst createPromiseAll = (promises, callback, processResult): Promise<*> => {\n  return Promise.all(promises).then(\n    result => {\n      const value = processResult ? processResult(result) : null;\n      callback && callback(null, value);\n      return Promise.resolve(value);\n    },\n    errors => {\n      callback && callback(errors);\n      return Promise.reject(errors);\n    }\n  );\n};\n\nexport default class AsyncStorage {\n\n  /**\n   * Fetches `key` value.\n   */\n  static getItem(key: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      return window.localStorage.getItem(key);\n    }, callback);\n  }\n\n  /**\n   * Sets `value` for `key`.\n   */\n  static setItem(key: string, value: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  }\n\n  /**\n   * Removes a `key`\n   */\n  static removeItem(key: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  }\n\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  static mergeItem(key: string, value: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  }\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  static clear(callback?: Function): Promise<*> {\n    return createPromise(() => {\n      window.localStorage.clear();\n    }, callback);\n  }\n\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  static getAllKeys(callback?: Function): Promise<*> {\n    return createPromise(() => {\n      const numberOfKeys = window.localStorage.length;\n      const keys = [];\n      for (let i = 0; i < numberOfKeys; i += 1) {\n        const key = window.localStorage.key(i);\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  }\n\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  static flushGetRequests() {}\n\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  static multiGet(keys: Array<string>, callback?: Function): Promise<*> {\n    const promises = keys.map(key => AsyncStorage.getItem(key));\n    const processResult = result => result.map((value, i) => [keys[i], value]);\n    return createPromiseAll(promises, callback, processResult);\n  }\n\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  static multiSet(keyValuePairs: Array<Array<string>>, callback?: Function): Promise<*> {\n    const promises = keyValuePairs.map(item => AsyncStorage.setItem(item[0], item[1]));\n    return createPromiseAll(promises, callback);\n  }\n\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  static multiRemove(keys: Array<string>, callback?: Function): Promise<*> {\n    const promises = keys.map(key => AsyncStorage.removeItem(key));\n    return createPromiseAll(promises, callback);\n  }\n\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  static multiMerge(keyValuePairs: Array<Array<string>>, callback?: Function): Promise<*> {\n    const promises = keyValuePairs.map(item => AsyncStorage.mergeItem(item[0], item[1]));\n    return createPromiseAll(promises, callback);\n  }\n}\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","'use strict';\nvar isObj = require('is-obj');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Sources cannot be null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction assignKey(to, from, key) {\n\tvar val = from[key];\n\n\tif (val === undefined || val === null) {\n\t\treturn;\n\t}\n\n\tif (hasOwnProperty.call(to, key)) {\n\t\tif (to[key] === undefined || to[key] === null) {\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object (' + key + ')');\n\t\t}\n\t}\n\n\tif (!hasOwnProperty.call(to, key) || !isObj(val)) {\n\t\tto[key] = val;\n\t} else {\n\t\tto[key] = assign(Object(to[key]), from[key]);\n\t}\n}\n\nfunction assign(to, from) {\n\tif (to === from) {\n\t\treturn to;\n\t}\n\n\tfrom = Object(from);\n\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tassignKey(to, from, key);\n\t\t}\n\t}\n\n\tif (Object.getOwnPropertySymbols) {\n\t\tvar symbols = Object.getOwnPropertySymbols(from);\n\n\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\tassignKey(to, from, symbols[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n}\n\nmodule.exports = function deepAssign(target) {\n\ttarget = toObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tassign(target, arguments[s]);\n\t}\n\n\treturn target;\n};\n","'use strict';\nmodule.exports = function (x) {\n\tvar type = typeof x;\n\treturn x !== null && (type === 'object' || type === 'function');\n};\n","/**\n * @format\n * @flow\n */\n\nimport AsyncStorage from './AsyncStorage';\n\ntype AsyncStorageHook = {\n  getItem: (\n    callback?: ?(error: ?Error, result: string | null) => void,\n  ) => Promise<string | null>,\n  setItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  mergeItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  removeItem: (callback?: ?(error: ?Error) => void) => Promise<null>,\n};\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n"],"sourceRoot":""}